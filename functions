#!/bin/bash

################################################################################

check_root() {

	if [[ $EUID -ne 0 ]]
	then
		echo "${r}${b}This script must be run as root${x}"
		echo
	        echo "${b}Exiting...${x}"
	        echo
	        exit 1
	fi

}

download_os_functions() {

	base_dir=/root/openspace42
	clone_name=bash_functions
	clone_dir=$base_dir/$clone_name
	if [ -d $clone_dir ]
	then
		rm -r ${clone_dir:?}
	fi
	mkdir -p $base_dir
	( cd $base_dir && git clone https://github.com/openspace42/$clone_name &> /dev/null )

}

source_os_functions() {

	for f in /root/openspace42/bash_functions/*
	do
		. $f
	done

}

################################################################################

define_vars() {

	proj_name="EasyEngine-Backup-Restore"
	short_name="ee-br"
	author_name="openspace42"

	os-define_vars

}

################################################################################

aenigma-add_ejabberd_repo() {

        currdistro="$(lsb_release --codename | cut -f2)"
        apt-get -y install apt-transport-https || true
        echo "deb https://apt.jabber.at $currdistro ejabberd" > /etc/apt/sources.list.d/jabber.at.list
        wget -qO- https://apt.jabber.at/gpg-key | apt-key add -
        apt-get update

}

aenigma-install_ejabberd_config() {

        echo "${b}Now creating ejabberd directory and setting custom aenigma config to /etc/ejabberd/ejabberd.yml...${x}"
        echo

        ejab_cand_vers="$(apt-cache show ejabberd | grep Version | head -1 | sed "s|Version: ||" | cut -d ':' -f 2 | cut -f1 -d'-')"

        source_ejab_conf_file="$sourcedir/conf/ejabberd/ejabberd-$ejab_cand_vers.yml"

        if [ ! -f $source_ejab_conf_file ]
        then
                ### Fallback to ejabberd.yml for v17.08 in case the ejabberd candidate install version isn't among the ones we have config files for
                source_ejab_conf_file="$sourcedir/conf/ejabberd/ejabberd-17.08.yml"
        fi

        mkdir -p /etc/ejabberd/
        touch /etc/ejabberd/ejabberd.yml
        sed -i "s/example.im/${domain}/g" "$source_ejab_conf_file"
        sed -i "s/hostname.im/${hostname}/g" "$source_ejab_conf_file"
        if [ $configoption = 1 ]
        then
        sed -i "s|example.im|${domain}|g" $sourcedir/conf/ejabberd/ejabberd-tlsaddition-domain.txt
        sed -i "s|pathtofile|${domtlscertloc}|g" $sourcedir/conf/ejabberd/ejabberd-tlsaddition-domain.txt
        sed -i '/## aenigma_host_config_domain_placeholder_start:/,/## aenigma_host_config_domain_placeholder_end:/{//!d}' $sourcedir/conf/ejabberd/ejabberd.yml
        sed -i "/## aenigma_host_config_domain_placeholder_start:/ r $sourcedir/conf/ejabberd/ejabberd-tlsaddition-domain.txt" $sourcedir/conf/ejabberd/ejabberd.yml
        fi
        #sed -i "s|example.im|xu.${domain}|g" $sourcedir/conf/ejabberd/ejabberd-tlsaddition-xu.txt
        #sed -i "s|pathtofile|${tlsdir}/xu.pem|g" $sourcedir/conf/ejabberd/ejabberd-tlsaddition-xu.txt
        #sed -i '/## aenigma_host_config_xu_placeholder_start:/,/## aenigma_host_config_xu_placeholder_end:/{//!d}' $sourcedir/conf/ejabberd/ejabberd.yml
        #sed -i "/## aenigma_host_config_xu_placeholder_start:/ r $sourcedir/conf/ejabberd/ejabberd-tlsaddition-xu.txt" $sourcedir/conf/ejabberd/ejabberd.yml
        cp "$source_ejab_conf_file" /etc/ejabberd/ejabberd.yml
        echo "${b}Finished creating ejabberd directory and setting custom aenigma config to /etc/ejabberd/ejabberd.yml.${x}"
        echo

}
